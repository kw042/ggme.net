---
/**
 * @typedef {Object} Props
 * @property {Array<Object>} works
 */

interface Work {
  frontmatter: {
    title: string;
    description: string;
    image?: string;
    slug: string;
    date?: string;
  };
}

/** @type {Props} */
const { works } = Astro.props;
import WorkCard from './WorkCard.astro';

// 日付でソート（新しい順）
const sortedWorks = [...works].sort((a, b) => {
  const dateA = a.frontmatter.date ? new Date(a.frontmatter.date) : new Date(0);
  const dateB = b.frontmatter.date ? new Date(b.frontmatter.date) : new Date(0);
  return dateB.getTime() - dateA.getTime();
});
---

<div class="works-grid">
  {sortedWorks.map((work: Work) => (
    <WorkCard work={work} />
  ))}
</div>

<style>
  .works-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, 430px);
    gap: 2rem;
    padding: 2rem;
    justify-content: center;
  }

  @media (max-width: 768px) {
    .works-grid {
      grid-template-columns: minmax(auto, 92%);
      padding: 1rem;
      gap: 1.5rem;
    }
  }
</style> 